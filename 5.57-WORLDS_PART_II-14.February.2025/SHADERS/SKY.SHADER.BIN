[[FX]]

sampler gShadowMap = sampler_state
{
    TexUnit = 0;
};

sampler gDiffEnvMap = sampler_state
{
    TexUnit = 1;
};

sampler gSpecEnvMap = sampler_state
{
    TexUnit = 2;
};

sampler gNoiseMap = sampler_state
{
    DefaultTexture = SHADER/CLOUDNOISE.DDS;
    TexUnit = 3;
    Address = Wrap;
};

sampler gBufferMap = sampler_state
{
    Address = Clamp;
    TexUnit = 4;
};

//TF_BEGIN
sampler gSkyCubeMap = sampler_state
{
    DefaultTexture = SHADER/AMBIENTTEST.DDS;
    SamplingOptions = On;
    MaxAnisotropy = 0;
    Filter = Trilinear;
    Address = Clamp;
    TexUnit = 5;
};
//TF_END


// Uniforms
// Fog
float4 gSkyColourVec4                   = {1.0, 0.0, 1.0, 0.0};
float4 gHorizonColourVec4               = {1.0, 0.0, 1.0, 0.0};
float4 gSunColourVec4                   = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogColourNearVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogVec4                    = {1.0, 0.0, 1.0, 0.0};
float4 gFogColourVec4                   = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceHorizonColourVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogColourVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogParamsVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gFogParamsVec4                   = {1.0, 0.0, 1.0, 0.0};
float4 gScatteringParamsVec4            = {1.0, 0.0, 1.0, 0.0};
float4 gFogFadeHeightsVec4              = {1.0, 0.0, 1.0, 0.0};
float4 gFogFadeHeights2Vec4             = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColour1Vec4             = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColour2Vec4             = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColour3Vec4             = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSunColourVec4              = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceCloudColourVec4            = {1.0, 0.0, 1.0, 0.0};
float4 gSunPositionVec4                 = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceScatteringParamsVec4       = {1.0, 0.0, 1.0, 0.0};

float4 gSpaceNebulaColour1Vec4         = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceNebulaColour2Vec4         = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceNebulaColour3Vec4         = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceNebulaColour4Vec4         = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceNormalParamsVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceNebulaParamsVec4          = {1.0, 0.0, 1.0, 0.0};

// Planet
float4 gPlanetPositionVec4             = {0.0, -1204.0, 0.0, 1204.0};
float4 gLightOriginVec4                = {0.0, 0.0, 0.0, 0.0};

// Lighting
float4 gIblSkyAndAtmosFactor           = { 0.0, 0.0, 0.0, 0.0 };

//TF_BEGIN
float4 gHDRParamsVec4				   = { 0.0, 0.0, 0.0, 0.0 };
float4 gDoFParamsVec4				   = { 0.0, 0.0, 0.0, 0.0 };
//TF_END

context CLEAR
{
    VertexShader = compile GLSL VS_MOTION_VEC;
    PixelShader  = compile GLSL FS_CLEAR;
}

context [ SWITCH IOS MACOS ] CLEAR_NO_NOISE
{
    VertexShader = compile GLSL VS_MOTION_VEC;
    PixelShader  = compile GLSL FS_CLEAR_NO_NOISE;
}

context [ SWITCH IOS MACOS ] NOISE_MASKED
{
    VertexShader = compile GLSL VS_GENERAL_NO_BINDLESS;
    PixelShader  = compile GLSL FS_NOISE_MASKED;
}

context LIGHTING
{
    VertexShader = compile GLSL VS_GENERAL;
    PixelShader  = compile GLSL FS_LIGHTING;
}

context LIGHTING_LOWQ
{
    VertexShader = compile GLSL VS_GENERAL_LOWQ;
    PixelShader  = compile GLSL FS_LIGHTING_LOWQ;
}

context REFLECT
{
    VertexShader = compile GLSL VS_REFLECT;
    PixelShader  = compile GLSL FS_LIGHTING_REFLECT;
}

context [ !MACOS !IOS ] REFLECT_WATER
{
    VertexShader = compile GLSL VS_GENERAL_LOWQ;
    PixelShader  = compile GLSL FS_LIGHTING_REFLECT_WATER;
}

context [ MACOS IOS ] REFLECT_WATER
{
    VertexShader = compile GLSL VS_GENERAL_REFLECT_WATER;
    PixelShader  = compile GLSL FS_LIGHTING_REFLECT_WATER;
}

context [ !MACOS !IOS ] SCRATCHPAD
{
    VertexShader = compile GLSL VS_GENERAL;
    PixelShader  = compile GLSL FS_SCRATCHPAD;
}

//TF_BEGIN
context [ !SWITCH ] LIGHTING_FRWD
{
	VertexShader = compile GLSL VS_GENERAL_FRWD;
	PixelShader = compile GLSL FS_LIGHTING_FRWD;
}

context [ !SWITCH ] BAKE_LIGHTING
{
	VertexShader = compile GLSL VS_GENERAL;
	PixelShader = compile GLSL FS_BAKE_LIGHTING;
}

context [ !SWITCH ] CUBE
{
	VertexShader = compile GLSL VS_CUBE;
	PixelShader = compile GLSL FS_CUBE;
}

[[VS_GENERAL_FRWD]]
// =================================================================================================
#define D_SKY
#define D_SKY_FORWARD
#include "Custom/SkyVertex.shader.h"

[[FS_LIGHTING_FRWD]]
// =================================================================================================
#define D_SKY
#define D_SKY_FORWARD
#include "Custom/SkyFragment.shader.h"

[[FS_BAKE_LIGHTING]]
// =================================================================================================
#define D_SKY
#define D_SKY_FORWARD
#define D_SKY_BAKE
#include "Custom/SkyFragment.shader.h"

[[VS_CUBE]]
// =================================================================================================
#define D_SKY_CUBE
#define D_DOF
#define D_BLOOM
#define D_LENSFLARE
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/SkyVertex.shader.h"

[[FS_CUBE]]
// =================================================================================================
#define D_SKY_CUBE
#define D_DOF
#define D_BLOOM
#define D_LENSFLARE
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/SkyFragment.shader.h"
//TF_END

[[VS_GENERAL]]
// =================================================================================================
#define D_SKY
#include "Custom/SkyVertex.shader.h"

[[VS_GENERAL_NO_BINDLESS]]
// =================================================================================================
#define D_SKY
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/SkyVertex.shader.h"

[[VS_MOTION_VEC]]
// =================================================================================================
#define D_SKY
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/SkyVertex.shader.h"

[[VS_GENERAL_REFLECT_WATER]]
#define D_SKY
#define D_LOWQUALITY
#define D_REFLECT_WATER
#include "Custom/SkyVertex.shader.h"

[[VS_GENERAL_LOWQ]]
// =================================================================================================
#define D_SKY
#define D_LOWQUALITY
#include "Custom/SkyVertex.shader.h"

[[VS_REFLECT]]
// =================================================================================================
#define D_SKY
#define D_LOWQUALITY
#define D_REFLECT
#include "Custom/SkyVertex.shader.h"

[[FS_CLEAR]]
// =================================================================================================
#define D_ATTRIBUTES
#define D_SKY
#define D_SKY_CLEAR
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/SkyFragment.shader.h"

[[FS_CLEAR_NO_NOISE]]
// =================================================================================================
#define D_ATTRIBUTES
#define D_SKY
#define D_SKY_CLEAR
#define D_OUTPUT_MOTION_VECTORS
#define D_NO_NOISE
#include "Custom/SkyFragment.shader.h"

[[FS_NOISE_MASKED]]
// =================================================================================================
#define D_SKY
#define D_SKY_NOISE
#define D_USE_MASK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/SkyFragment.shader.h"

[[FS_LIGHTING]]
// =================================================================================================
#define D_SKY
#include "Custom/SkyFragment.shader.h"

[[FS_LIGHTING_LOWQ]]
// =================================================================================================
#define D_SKY
#define D_LOWQUALITY
#include "Custom/SkyFragment.shader.h"

[[FS_LIGHTING_REFLECT]]
// =================================================================================================
#define D_SKY
#define D_LOWQUALITY
#define D_REFLECT
#include "Custom/SkyFragment.shader.h"

[[FS_LIGHTING_REFLECT_WATER]]
// =================================================================================================
#define D_SKY
#define D_LOWQUALITY
#define D_REFLECT_WATER
#include "Custom/SkyFragment.shader.h"

[[FS_SCRATCHPAD]]
// =================================================================================================
#define D_SKY
#define D_SCRATCHPAD
#include "Custom/SkyFragment.shader.h"
