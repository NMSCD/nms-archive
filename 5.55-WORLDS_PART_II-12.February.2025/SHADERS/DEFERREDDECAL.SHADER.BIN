[[FX]]

// Samplers

sampler gDiffuseMap = sampler_state
{
	TexUnit = 0;
};

sampler gCausticMap = sampler_state
{
    Address = Wrap;
    TexUnit = 1;
};


sampler gCausticOffsetMap = sampler_state
{
    Address = Wrap;
    TexUnit = 2;
};

sampler gNormalMap = sampler_state
{
	TexUnit = 3;
};

sampler gDiffuse2Map = sampler_state
{
	TexUnit = 4;
};

sampler gMasksMap = sampler_state
{
    TexUnit = 6;
};

sampler gColouriseMaskMap = sampler_state
{
    TexUnit = 7;
};

sampler gNormal2Map = sampler_state
{
	TexUnit = 8;
};

sampler gDiffEnvMap = sampler_state
{
    TexUnit = 9;
};

sampler gSpecEnvMap = sampler_state
{
    TexUnit = 10;
};

sampler gFadeNoiseMap = sampler_state
{
	DefaultTexture = SHADER/FADENOISE.DDS;
	TexUnit = 18;
    Address = Wrap;
};

sampler gBufferMap = sampler_state
{
	TexUnit = 5;
    Address = Clamp;
};


sampler gCloudShadowMap = sampler_state
{
    TexUnit = 14;
};

sampler gShadowMap = sampler_state
{
    TexUnit = 15;
};

//TF_BEGIN
sampler gLightCluster = sampler_state
{
	ImgUnit = 0;
};

sampler gLightCookiesMap = sampler_state
{
    Address = Clamp;
    TexUnit = 12;
};
//TF_END

// Uniforms

// Planet
float4 gPlanetPositionVec4				= {0.0, -1204.0, 0.0, 1204.0};
float4 gLightOriginVec4                   = {0.0, 0.0, 0.0, 0.0};

// Lighting
float4 gMaterialParamsVec4              = {0.9, 0.5, 0.0, 0.5};
float4 gMaterialSFXVec4                 = { 0.0, 0.0, 0.0, 0.0 };
float4 gMaterialSFXColVec4              = { 0.0, 0.0, 0.0, 0.0 };

// Texturing
float4 gMaterialColourVec4              = {1.0, 1.0, 1.0, 1.0};
float4 gUVScrollStepVec4                = {0.0, 0.0, 0.0, 0.0};
float4 gCustomParams02Vec4              = {0.0, 1.0, 1.0, 0.0};
float4 gCustomParams01Vec4              = {0.0, 0.0, 0.0, 0.0};

float4 gAlphaCutoutThresholdVec4        = {0.45, 0.5, 0.0, 0.0};



context LIT_DEFER
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader  = compile GLSL FS_LIT_DEFER;
}

context LIT_DEFER_INSTANCE
{
	VertexShader = compile GLSL VS_DEFER_INSTANCE;
	PixelShader  = compile GLSL FS_LIT_DEFER_INSTANCE;

	Instanced = true;
}

context ICON_FORWARD_NS
{
    VertexShader = compile GLSL VS_ICON_FORWARD_NS;
    PixelShader = compile GLSL FS_ICON_FORWARD_NS;
}

context LIT_FORWARD
{
    VertexShader = compile GLSL VS_LIT_FORWARD;
    PixelShader  = compile GLSL FS_LIT_FORWARD;
}

//TF_BEGIN

context [ MACOS ] LIT_FW_TIL
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED;
}

context [ IOS ] LIT_FW_TIL
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED;
}

context [ MACOS ] LIT_FW_INST
{
	VertexShader = compile GLSL VS_INSTANCE_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_INSTANCE_TILED;

	Instanced = true;
}

context [ IOS ] LIT_FW_INST
{
	VertexShader = compile GLSL VS_INSTANCE_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_INSTANCE_TILED;

	Instanced = true;
}

[[VS_GENERAL_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_DEFERRED_DECAL
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#include "UberVertex.shader.h"

[[FS_LIT_FRWD_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_DEFERRED_DECAL
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define _F40_SUBSURFACE_MASK
#include "UberFragment.shader.h"

[[VS_INSTANCE_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_INSTANCE
#define D_DEFERRED_DECAL
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#include "UberVertex.shader.h"

[[FS_LIT_FRWD_INSTANCE_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_INSTANCE
#define D_DEFERRED_DECAL
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define _F40_SUBSURFACE_MASK
#include "UberFragment.shader.h"
//TF_END


[[VS_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_DEFERRED_DECAL

#include "UberVertex.shader.h"


[[FS_LIT_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_DEFERRED_DECAL

#include "UberFragment.shader.h"

[[VS_DEFER_INSTANCE]]
// =================================================================================================
#define D_DEFER
#define D_INSTANCE
#define D_DEFERRED_DECAL

#include "UberVertex.shader.h"

[[FS_LIT_DEFER_INSTANCE]]
// =================================================================================================
#define D_DEFER
#define D_INSTANCE
#define D_ATTRIBUTES
#define D_DEFERRED_DECAL

#include "UberFragment.shader.h"

[[VS_ICON_FORWARD_NS]]
// =================================================================================================
#define D_NO_SHADOWS
#define D_NO_POSTPROCESS
#define D_DEFERRED_DECAL
#define D_ICON
#include "UberVertex.shader.h"

[[FS_ICON_FORWARD_NS]]
// =================================================================================================
#define D_NO_SHADOWS
#define D_NO_POSTPROCESS
#define D_NO_GLOW
#define D_DEFERRED_DECAL
#define D_ICON
#include "UberFragment.shader.h"

[[VS_LIT_FORWARD]]
// =================================================================================================
#define D_LIT_FORWARD
#define D_DEFERRED_DECAL
#include "UberVertex.shader.h"

[[FS_LIT_FORWARD]]
// =================================================================================================
#define D_LIT_FORWARD
#define D_DEFERRED_DECAL
#include "UberFragment.shader.h"
