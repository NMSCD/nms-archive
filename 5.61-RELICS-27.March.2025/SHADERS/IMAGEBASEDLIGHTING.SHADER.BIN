[[FX]]

// Samplers
sampler gDualPMap = sampler_state
{
	TexUnit = 10;
};


// Uniforms
float4 gGenericParam0Vec4 = { 1.0, 0.0, 0.0, 0.0 };
float4 gGenericParam1Vec4 = { 1.0, 0.0, 0.0, 0.0 };


// Contexts

context DUALP_DOWN
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_DUAL_PARABOLOID_DOWNSAMPLE;
}

context BLEND_INDOORS
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_BLEND_INDOORS;
}

context INTEGRATE_DIFFUSE
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_INTEGRATE_DIFFUSE;
}

context INTEGRATE_SPECULAR
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_INTEGRATE_SPECULAR;
}


[[VS_FSQUAD]]
// =================================================================================================
#define D_IBL
#include "ImmediateModeVertex.shader.h"

[[FS_DUAL_PARABOLOID_DOWNSAMPLE]]
// =================================================================================================
#define D_IBL
#define D_DUAL_PARABOLOID_DOWNSAMPLE
#include "Fullscreen/ImageBasedLightingFragment.shader.h"

[[FS_BLEND_INDOORS]]
// =================================================================================================
#define D_IBL
#define D_BLEND_INDOORS
#include "Fullscreen/ImageBasedLightingFragment.shader.h"

[[FS_INTEGRATE_DIFFUSE]]
// =================================================================================================
#define D_IBL
#define D_INTEGRATE_DIFFUSE
#include "Fullscreen/ImageBasedLightingFragment.shader.h"

[[FS_INTEGRATE_SPECULAR]]
// =================================================================================================
#define D_IBL
#define D_INTEGRATE_SPECULAR
#include "Fullscreen/ImageBasedLightingFragment.shader.h"
 



