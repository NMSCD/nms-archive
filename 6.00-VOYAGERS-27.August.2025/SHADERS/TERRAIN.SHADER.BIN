[[FX]]

// Samplers
sampler gDiffuseMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 0;
};

sampler gNormalMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 1;
};

sampler gDiffuseDetailMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 18;
};

sampler gNormalDetailMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 13;
};

sampler gSubstanceDiffuseMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 2;
};

sampler gSubstanceNormalMap = sampler_state
{
    Address = Wrap;
    Filter = Trilinear;
    MaxAnisotropy = 8;
    TexUnit = 3;
};

sampler gNoiseMap = sampler_state
{
    DefaultTexture = SHADER/CLOUDNOISE.DDS;
    TexUnit = 4;
    Address = Wrap;
};

sampler gPerlin3D = sampler_state
{
    DefaultTexture = SHADER/NOISEHALF.DDS;
    TexUnit = 5;
    Address = Wrap;
};

sampler gCausticMap = sampler_state
{
    TexUnit = 6;
};

sampler gCausticOffsetMap = sampler_state
{
    TexUnit = 7;
};

sampler gShadowMap = sampler_state
{
    TexUnit = 8;
};


sampler gCloudShadowMap = sampler_state
{
    TexUnit = 9;
};

sampler gDiffEnvMap = sampler_state
{
    TexUnit = 10;
};

sampler gSpecEnvMap = sampler_state
{
    TexUnit = 11;
};

sampler gFadeNoiseMap = sampler_state
{
    DefaultTexture = SHADER/BLUENOISE.DDS;
    TexUnit = 14;
};

sampler gSparseNearDiffMap = sampler_state
{
	TexUnit = 15;
};

sampler gSparseNearNormMap = sampler_state
{
	TexUnit = 16;
};

sampler gSparseNearStatusMap = sampler_state
{
	TexUnit = 17;
};

sampler gSparseFarStatusMap = sampler_state
{
	TexUnit = 19;
};

sampler gSparseFarDiffMap = sampler_state
{
    TexUnit = 21;
};

sampler gSparseFarNormMap = sampler_state
{
    TexUnit = 22;
};

sampler gValueNoiseNorms2D = sampler_state
{
    DefaultTexture = SHADER/VALUENOISE2D.NORMAL.DDS;
    TexUnit = 23;
    Address = Wrap;
};

sampler gValueNoiseNorms2D_VR = sampler_state
{
    DefaultTexture = SHADER/VALUENOISE2D_VR.NORMAL.DDS;
    TexUnit = 20;
    Address = Wrap;
};

//TF_BEGIN
sampler gLightCluster = sampler_state
{
	ImgUnit = 0;
};

sampler gLightCookiesMap = sampler_state
{
    Address = Clamp;
    TexUnit = 12;
};
//TF_END

sampler gFeedbackMap = sampler_state
{
	ImgUnit = 1;
};

// Uniforms
uint4  gDynamicFlags = {0, 0, 0, 0};

float4 gTerrainLodParamsVec4	  = {1.0, 0.0, 0.0, 0.0}; 
                                  
// Planet                         
float4 gPlanetPositionVec4		  = {0.0, 0.0, 0.0, 0.0}; 
float4 gLightOriginVec4           = {0.0, 0.0, 0.0, 0.0}; 
                                  
// Lighting                       
float4 gMaterialParamsVec4        = {0.9, 0.5, 0.0, 0.5};

// Fog
float4 gSkyColourVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gHorizonColourVec4         = {1.0, 0.0, 1.0, 0.0};
float4 gSunColourVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogColourNearVec4    = {1.0, 0.0, 1.0, 0.0};
float4 gWaterAlbedoVec4     = {1.0, 0.0, 1.0, 0.0};
float4 gWaterAbsorptionVec4       = { 1.0, 0.0, 1.0, 0.0 };
float4 gWaterScatterVec4          = { 1.0, 0.0, 1.0, 0.0 };
float4 gWaterKFunctionVec4        = { 1.0, 0.0, 1.0, 0.0 };
float4 gWaterEmissionVec4         = { 1.0, 0.0, 1.0, 0.0 };
float4 gWaterCausticsColourVec4         = { 1.0, 0.0, 1.0, 0.0 };
float4 gInverseWaterWorld0     = {0.0, 0.0, 0.0, 0.0};
float4 gInverseWaterWorld1     = {0.0, 0.0, 0.0, 0.0};
float4 gInverseWaterWorld2     = {0.0, 0.0, 0.0, 0.0};
float4 gInverseWaterWorld3     = {0.0, 0.0, 0.0, 0.0};
float4 gTerrainEditEffectsVec4    = {1.0, 0.0, 0.0, 0.0};
float4 gWaterFogVec4              = {1.0, 0.0, 1.0, 0.0};
float4 gFogColourVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceHorizonColourVec4    = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogColourVec4       = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogParamsVec4       = {1.0, 0.0, 1.0, 0.0};
float4 gFogParamsVec4             = {1.0, 0.0, 1.0, 0.0};
float4 gScatteringParamsVec4      = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceFogParamsVec4        = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColourVec4        = {1.0, 0.0, 1.0, 0.0};
float4 gSunPositionVec4           = {1.0, 0.0, 1.0, 0.0};
float4 gLightTopColourVec4        = {1.0, 1.0, 1.0, 1.0};
float4 gSpaceScatteringParamsVec4 = {1.0, 0.0, 1.0, 0.0};

// Scan
float4 gScanParamsPosVec4         = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg1Vec4        = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg2Vec4        = {0.0, 0.0, 0.0, 0.0};
float4 gScanParamsCfg3Vec4        = {0.0, 0.0, 0.0, 0.0};

float4 gMiningPosVec4               = {0.0, 0.0, 0.0, 0.0};
float4 gDebugColourVec4             = {1.0, 0.0, 0.0, 0.0};
float4 gTerrainDistancesVec4        = {0.0, 0.0, 0.0, 0.0};

float4 gTextureScalesVec4;
float4 gTextureScales2Vec4;
float4 gTextureScales3Vec4;
float4 gTextureDistancesVec4;
float4 gTextureDistances2Vec4;

float4 gHueOverlayParamsVec4        = {8.0, 0.5, 2.0, 2.0};
float4 gSaturationOverlayParamsVec4 = {8.0, 0.5, 2.0, 2.0};
float4 gValueOverlayParamsVec4      = {8.0, 0.5, 2.0, 2.0};
float4 gTileBlendScalesVec4         = {8.0, 0.5, 2.0, 2.0};

float4 gaAverageColoursVec4;
float4 gaTerrainColoursVec4;
float4 gaTerrainColours0Vec4;
float4 gaTerrainColours1Vec4;
float4 gaTerrainColours2Vec4;
float4 gaSpecularValuesVec4;
float4 gaTerrainSettingsVec4;
float4 gTerrainColourControlsVec4  = { 0.0, 0.0, 0.0, 0.0 };
float4 gTerrainColourControls2Vec4 = { 0.0, 0.0, 0.0, 0.0 };

float4 gTriplanarHackParamsVec4;
float4 gTriplanarHackParams2Vec4;

float4 gTextureCoordsAdjustVec4 = { 1.0, 1.0, 0.0, 0.0 };
float4 gTextureCoordsBorderVec4 = { 0.0, 0.0, 1.0, 1.0 };

float4 gTexCacheBlockColourVec4 = { 1.0, 0.0, 1.0, 1.0 };

float4 gAuxLightColourVec4    = { 1.0, 1.0, 1.0, 1.0 };
float4 gAuxLightDirectionVec4 = { 1.0, 0.0, 0.0, 0.0 };

//TF_BEGIN
float4 gHDRParamsVec4 = { 0.0, 0.0, 0.0, 0.0 };
float4 gDoFParamsVec4 = { 0.0, 0.0, 0.0, 0.0 };
float4 gRainParametersVec4 = { 0.0, 0.0, 0.0, 0.0 };
//TF_END

// Contexts
context SHADOW_FADE
{
    VertexShader = compile GLSL VS_SHADOW_FADE;
    PixelShader = compile GLSL FS_SHADOW_FADE;
}

context REFLECT_DUALP
{
    VertexShader = compile GLSL VS_REFLECT_DUALP;
    PixelShader  = compile GLSL FS_REFLECT_DUALP;
}

context REFL_DUALP_GGX
{
    VertexShader = compile GLSL VS_REFLECT_DUALP_GGX;
    PixelShader  = compile GLSL FS_REFLECT_DUALP_GGX;
}

context RFLCT_STC_T_S
{
    VertexShader = compile GLSL VS_REFLECT_WATER_STC_T_SPLIT_FADE;
    PixelShader  = compile GLSL FS_REFLECT_WATER_STC_T_SPLIT_FADE; 
}
 
context RFLCT_FW_TIL
{
    VertexShader = compile GLSL VS_REFLECT_WATER_TILED;
    PixelShader  = compile GLSL FS_REFLECT_WATER_TILED;
}
 
context [ !IOS !SWITCH ] LIT_FORWARD
{
    VertexShader = compile GLSL VS_GENERAL;
    PixelShader  = compile GLSL FS_LIT_FORWARD;
}

context [ !IOS !SWITCH ] LIT_FORWARD_LOW
{
    VertexShader = compile GLSL VS_GENERAL_LOW;
    PixelShader  = compile GLSL FS_LIT_FORWARD_LOW;
}

context [ !SWITCH ] LIT_DEFER
{
    VertexShader = compile GLSL VS_DEFER;
    PixelShader  = compile GLSL FS_LIT_DEFER;
}

context [ !MACOS !IOS !SWITCH ] CACHE_COLOUR
{
	VertexShader = compile GLSL VS_DEFER_CACHE;
    HullShader   = compile GLSL HS_DEFER_CACHE_BORDER;
    DomainShader = compile GLSL DS_DEFER_CACHE_BORDER;
	PixelShader  = compile GLSL FS_CACHE_COLOUR;
}

context [ !MACOS !IOS !SWITCH ] CACHE_HEIGHT
{
    VertexShader = compile GLSL VS_DEFER_CACHE;
    HullShader   = compile GLSL HS_DEFER_CACHE;
    DomainShader = compile GLSL DS_DEFER_CACHE;
    PixelShader  = compile GLSL FS_CACHE_HEIGHT;
}

context [ !MACOS !IOS !SWITCH ] CACHE_NORMALS
{
	VertexShader = compile GLSL VS_DEFER_CACHE;
    HullShader   = compile GLSL HS_DEFER_CACHE_BORDER;
    DomainShader = compile GLSL DS_DEFER_CACHE_BORDER;
	PixelShader  = compile GLSL FS_CACHE_NORMAL;
}

context [ !MACOS !IOS !SWITCH ] CACHE_COLOUR_FAR
{
	VertexShader = compile GLSL VS_DEFER_CACHE;
    HullShader   = compile GLSL HS_DEFER_CACHE_BORDER;
    DomainShader = compile GLSL DS_DEFER_CACHE_BORDER;
	PixelShader  = compile GLSL FS_CACHE_COLOUR_FAR;
}

context [ !MACOS !IOS !SWITCH ] CACHE_NORMALS_FAR
{
	VertexShader = compile GLSL VS_DEFER_CACHE;
    HullShader   = compile GLSL HS_DEFER_CACHE_BORDER;
    DomainShader = compile GLSL DS_DEFER_CACHE_BORDER;
	PixelShader  = compile GLSL FS_CACHE_NORMAL_FAR;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_CACHE
{
	VertexShader = compile GLSL VS_DEFER_USE_CACHE;
    HullShader   = compile GLSL HS_DEFER_USE_CACHE;
    DomainShader = compile GLSL DS_DEFER_USE_CACHE;
	PixelShader  = compile GLSL FS_LIT_DEFER_CACHE;
}

context [ !MACOS !IOS !SWITCH ] LIT_DF_CACHE_FB
{
    VertexShader = compile GLSL VS_DEFER_USE_CACHE;
    HullShader   = compile GLSL HS_DEFER_USE_CACHE;
    DomainShader = compile GLSL DS_DEFER_USE_CACHE;
    PixelShader  = compile GLSL FS_FEEDBACK_LIT_DEFER_CACHE;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_FB
{
    VertexShader   = compile GLSL VS_DEFER_FEEDBACK;
    HullShader     = compile GLSL HS_DEFER_FEEDBACK;
    DomainShader   = compile GLSL DS_DEFER_FEEDBACK;
    PixelShader    = compile GLSL FS_LIT_DEFER_FEEDBACK;
}

context [ !MACOS !IOS !SWITCH ] LIT_TESS_FB
{
    VertexShader   = compile GLSL VS_DEFER_FEEDBACK;
    HullShader     = compile GLSL HS_DEFER_TESS_FEEDBACK;
    DomainShader   = compile GLSL DS_DEFER_TESS_FEEDBACK;
    PixelShader    = compile GLSL FS_LIT_DEFER_FB_FADE;
}

context DEPTHONLY_DEFER
{
    VertexShader = compile GLSL VS_DEPTHONLY_DEFER;
    PixelShader = compile GLSL FS_DEPTHONLY_DEFER;
}

context DEPTHONLY_TOP
{
    VertexShader = compile GLSL VS_DEPTHONLY_TOP;
    PixelShader = compile GLSL FS_DEPTHONLY_TOP;
}

context [ !MACOS !IOS !SWITCH ] DEPTHONLY_TESS
{
    VertexShader = compile GLSL VS_DEFER_TESS_DEPTHONLY;
    HullShader   = compile GLSL HS_DEPTHONLY_TESS;
    DomainShader = compile GLSL DS_DEPTHONLY_TESS;
    PixelShader  = compile GLSL FS_DEPTHONLY_DEFER;
}

context [ !MACOS !IOS !SWITCH ] DEPTHOCACHETESS
{
    VertexShader = compile GLSL VS_DEPTHONLY_USE_CACHE;
    HullShader   = compile GLSL HS_DEPTHONLY_USE_CACHE;
    DomainShader = compile GLSL DS_DEPTHONLY_USE_CACHE;
    PixelShader  = compile GLSL FS_DEPTHONLY_USE_CACHE;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_X_FACING
{
    VertexShader   = compile GLSL VS_DEFER;
    PixelShader   = compile GLSL FS_LIT_DEFER_X_FACING;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_Y_FACING
{
    VertexShader   = compile GLSL VS_DEFER;
    PixelShader   = compile GLSL FS_LIT_DEFER_Y_FACING;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_Z_FACING
{
    VertexShader   = compile GLSL VS_DEFER;
    PixelShader   = compile GLSL FS_LIT_DEFER_Z_FACING;
}

context [ !SWITCH ] LIT_DEFER_N_FACING
{
    VertexShader   = compile GLSL VS_DEFER;
    PixelShader   = compile GLSL FS_LIT_DEFER_N_FACING;
}

// TF_BEGIN
context [ IOS ] LIT_FW_N_FACING
{
    VertexShader   = compile GLSL VS_GENERAL_TILED;
    PixelShader   = compile GLSL FS_LIT_FRWD_TILED_N_FACING;
}

context [ MACOS ] LIT_FW_N_FACING
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_N_FACING;
}

context [ IOS ] LIT_FW_STC_X_FACING
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_X_FACING;
}

context [ MACOS ] LIT_FW_STC_X_FACING
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_X_FACING;
}

context [ IOS ] LIT_FW_STC_Y_FACING
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_Y_FACING;
}

context [ MACOS ] LIT_FW_STC_Y_FACING
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_Y_FACING;
}

context [ IOS ] LIT_FW_STC_Z_FACING
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_Z_FACING;
}

context [ MACOS ] LIT_FW_STC_Z_FACING
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_Z_FACING;
}

context [ IOS ] LIT_FW_STC_N_FACING
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_N_FACING;
}

context [ MACOS ] LIT_FW_STC_N_FACING
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_N_FACING;
}


context [ IOS ] LIT_FW_STC_T_S
{
    VertexShader = compile GLSL VS_FRWD_TILED_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_T_SPLIT;
}

context [ MACOS ] LIT_FW_STC_T_S
{
    VertexShader = compile GLSL VS_FRWD_TILED_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_T_SPLIT;
}

context [ IOS ] LIT_FW_STC_T_SF
{
    VertexShader = compile GLSL VS_FRWD_TILED_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_T_SPLIT_FADE;
}

context [ MACOS ] LIT_FW_STC_T_SF
{
    VertexShader = compile GLSL VS_FRWD_TILED_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_STC_T_SPLIT_FADE;
}

// TF_END

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_STC_X_FACING
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader = compile GLSL FS_LIT_DEFER_STC_X_FACING;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_STC_Y_FACING
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader = compile GLSL FS_LIT_DEFER_STC_Y_FACING;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_STC_Z_FACING
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader = compile GLSL FS_LIT_DEFER_STC_Z_FACING;
}

context [ !SWITCH ] LIT_DEFER_STC_N_FACING
{
	VertexShader = compile GLSL VS_DEFER;
	PixelShader = compile GLSL FS_LIT_DEFER_STC_N_FACING;
}

context [ !SWITCH ] LIT_DEF_F_STC_N_FACING
{
    VertexShader = compile GLSL VS_DEFER;
    PixelShader = compile GLSL FS_LIT_DEFER_STC_N_FACING_FADE;
}

context LIT_DEFER_STL_N_FACING
{
    VertexShader = compile GLSL VS_DEFER_L;
    PixelShader = compile GLSL FS_LIT_DEFER_STL_N_FACING;
}

context LIT_DEF_F_STL_N_FACING
{
    VertexShader = compile GLSL VS_DEFER_L;
    PixelShader = compile GLSL FS_LIT_DEFER_STL_N_FACING_FADE;
}

context LIT_DEFER_STH_N_FACING
{
    VertexShader = compile GLSL VS_DEFER;
    PixelShader = compile GLSL FS_LIT_DEFER_STH_N_FACING;
}

context LIT_DEF_F_STH_N_FACING
{
    VertexShader = compile GLSL VS_DEFER;
    PixelShader = compile GLSL FS_LIT_DEFER_STH_N_FACING_FADE;
}

context [ !SWITCH ] LIT_DEFER_STC_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STC_T_SPLIT;
}

context [ !SWITCH ] LIT_DEF_F_STC_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STC_T_SPLIT_FADE;
}

context LIT_DEFER_STL_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_L_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STL_T_SPLIT;
}

context LIT_DEF_F_STL_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_L_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STL_T_SPLIT_FADE;
}

context LIT_DEFER_STH_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STH_T_SPLIT;
}

context LIT_DEF_F_STH_T_SPLIT
{
    VertexShader = compile GLSL VS_DEFER_T_SPLIT;
    PixelShader = compile GLSL FS_LIT_DEFER_STH_T_SPLIT_FADE;
}

context LIT_DEFER_TILE_BLEND
{
    VertexShader = compile GLSL VS_DEFER;
    PixelShader = compile GLSL FS_LIT_DEFER;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_TESS
{
    VertexShader  = compile GLSL VS_DEFER_TESS;
    HullShader    = compile GLSL HS_DEFER_TESS;
    DomainShader  = compile GLSL DS_DEFER_TESS;
    PixelShader   = compile GLSL FS_LIT_DEFER;
}

context LIT_DEFER_LOW
{
    VertexShader = compile GLSL VS_DEFER_LOW;
    PixelShader  = compile GLSL FS_LIT_DEFER_LOW;
}

context [ !IOS !SWITCH ] LIT_FORWARD_ASTEROID
{
    VertexShader = compile GLSL VS_ASTEROID;
    PixelShader  = compile GLSL FS_LIT_FORWARD_ASTEROID;
}

context LIT_DEFER_ASTEROID
{
    VertexShader = compile GLSL VS_DEFER_ASTEROID;
    PixelShader  = compile GLSL FS_LIT_DEFER_ASTEROID;
}

context LIT_FORWARD_MESH
{
    VertexShader = compile GLSL VS_MESH;
    PixelShader = compile GLSL FS_MESH;
}

context [ !MACOS !IOS !SWITCH ] LIT_DEFER_MESH
{
    VertexShader = compile GLSL VS_DEFER_MESH;
    PixelShader  = compile GLSL FS_LIT_DEFER;
}

context EDITS
{
    VertexShader = compile GLSL VS_EDITS;
    PixelShader = compile GLSL FS_EDITS;
}

context [ !MACOS !IOS !SWITCH ] EDITS_TESS
{
    VertexShader = compile GLSL VS_DEFER_TESS;
    HullShader = compile GLSL HS_DEFER_TESS;
    DomainShader = compile GLSL DS_DEFER_TESS;
    PixelShader = compile GLSL FS_EDITS_TESS;
}

context [ !MACOS !IOS !SWITCH ] EDITS_CACHE
{
    VertexShader = compile GLSL VS_DEFER_USE_CACHE;
    HullShader = compile GLSL HS_DEFER_USE_CACHE;
    DomainShader = compile GLSL DS_DEFER_USE_CACHE;
    PixelShader = compile GLSL FS_EDITS_CACHE;
}

context [ !MACOS !IOS !SWITCH ] EDITS_TESS_FB
{
    VertexShader = compile GLSL VS_DEFER_TESS;
    HullShader = compile GLSL HS_DEFER_TESS;
    DomainShader = compile GLSL DS_DEFER_TESS;
    PixelShader = compile GLSL FS_EDITS_TESS;
}

context [ !MACOS !IOS !SWITCH ] EDITS_CACHE_FB
{
    VertexShader = compile GLSL VS_DEFER_USE_CACHE;
    HullShader = compile GLSL HS_DEFER_USE_CACHE;
    DomainShader = compile GLSL DS_DEFER_USE_CACHE;
    PixelShader = compile GLSL FS_EDITS_CACHE;
}

context [ IOS ] LIT_FW_TIL
{
	VertexShader = compile GLSL VS_GENERAL_TILED;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED;
}

context [ MACOS ] LIT_FW_TIL
{
    VertexShader = compile GLSL VS_GENERAL_TILED;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED;
}

context [ IOS ] LIT_FW_TIL_L
{
	VertexShader = compile GLSL VS_GENERAL_FRWD_LOW;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_LOW;
}

context [ MACOS ] LIT_FW_TIL_L
{
    VertexShader = compile GLSL VS_GENERAL_FRWD_LOW;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_LOW;
}

context [ IOS ] LIT_FW_TIL_A
{
	VertexShader = compile GLSL VS_TILED_ASTEROID;
	PixelShader = compile GLSL FS_LIT_FRWD_TILED_ASTEROID;
}

context [ MACOS ] LIT_FW_TIL_A
{
    VertexShader = compile GLSL VS_TILED_ASTEROID;
    PixelShader = compile GLSL FS_LIT_FRWD_TILED_ASTEROID;
}

[[VS_GENERAL_FRWD_LOW]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_LOW_QUALITY
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/TerrainVertex.shader.h"

[[VS_GENERAL_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/TerrainVertex.shader.h"

[[VS_TILED_ASTEROID]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_ASTEROID
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/TerrainVertex.shader.h"

[[FS_LIT_FRWD_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_SUBSURFACE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_LOW]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_LOW_QUALITY
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_SUBSURFACE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_ASTEROID]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_ASTEROID
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_SUBSURFACE
#include "Custom/TerrainFragment.shader.h"

//TF_END

[[VS_SHADOW_FADE]]
// =================================================================================================
#define D_TERRAIN
#define D_FADE
#include "ShadowVertex.shader.h"

[[FS_SHADOW_FADE]]
// =================================================================================================
#define D_TERRAIN
#define D_FADE
#include "ShadowFragment.shader.h"

[[VS_GENERAL]]
// =================================================================================================
#include "Custom/TerrainVertex.shader.h"

[[VS_MESH]]
// =================================================================================================
#define D_CUSTOM_TILES
#define D_MESH
#include "Custom/TerrainVertex.shader.h"

[[FS_MESH]]
// =================================================================================================
#define D_CUSTOM_TILES
#define D_MESH
#include "Custom/TerrainFragment.shader.h"

[[VS_DEFER_MESH]]
// =================================================================================================
#define D_MESH
#define D_DEFER
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER]]
// =================================================================================================
#define D_DEFER
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_L]]
// =================================================================================================
#define D_DEFER
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainVertex.shader.h"

[[VS_DEPTHONLY_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_DEPTHONLY
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_T_SPLIT]]
// =================================================================================================
#define D_DEFER
#define D_TERRAIN_T_SPLIT
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_L_T_SPLIT]]
// =================================================================================================
#define D_DEFER
#define D_TERRAIN_T_SPLIT
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainVertex.shader.h"

// TF_BEGIN
[[VS_FRWD_TILED_T_SPLIT]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_T_SPLIT
#include "Custom/TerrainVertex.shader.h"
//TF_END

[[DS_DEFER_TESS]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#include "Custom/TerrainDomain.shader.h"

[[DS_DEFER_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainDomain.shader.h"

[[DS_DEFER_TESS_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainDomain.shader.h"

[[DS_DEPTHONLY_TESS]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#define D_DEPTHONLY
#include "Custom/TerrainDomain.shader.h"

[[DS_DEFER_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_APPLY_DISPLACEMENT
#include "Custom/TerrainDomain.shader.h"

[[DS_DEPTHONLY_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_APPLY_DISPLACEMENT
#define D_DEPTHONLY
#include "Custom/TerrainDomain.shader.h"

[[HS_DEFER_TESS]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#include "Custom/TerrainHull.shader.h"

[[HS_DEFER_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainHull.shader.h"

[[HS_DEFER_TESS_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainHull.shader.h"

[[HS_DEPTHONLY_TESS]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#define D_DEPTHONLY
#include "Custom/TerrainHull.shader.h"

[[HS_DEFER_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_APPLY_DISPLACEMENT
#include "Custom/TerrainHull.shader.h"

[[HS_DEPTHONLY_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_READ_TEX_CACHE
#define D_APPLY_DISPLACEMENT
#define D_DEPTHONLY
#include "Custom/TerrainHull.shader.h"

[[VS_DEFER_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#include "Custom/TerrainVertex.shader.h"

[[DS_DEFER_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#include "Custom/TerrainDomain.shader.h"

[[HS_DEFER_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#include "Custom/TerrainHull.shader.h"

[[DS_DEFER_CACHE_BORDER]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_EXPAND_BORDER
#include "Custom/TerrainDomain.shader.h"

[[HS_DEFER_CACHE_BORDER]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_EXPAND_BORDER
#include "Custom/TerrainHull.shader.h"

[[VS_DEFER_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainVertex.shader.h"

//TF_BEGIN
[[VS_DEPTHONLY_FORWARD]]
// =================================================================================================
#define D_DEPTHONLY
#include "Custom/TerrainVertex.shader.h"
//TF_END

[[VS_DEPTHONLY_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_DEPTHONLY
#include "Custom/TerrainVertex.shader.h"

[[VS_DEPTHONLY_TOP]]
// =================================================================================================
#define D_DEFER
#define D_DEPTHONLY
#define D_NO_FADE
#include "Custom/TerrainVertex.shader.h"

[[VS_GENERAL_LOW]]
// =================================================================================================
#define D_NO_WATER
#define D_OUTPUT_MOTION_VECTORS
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_LOW]]
// =================================================================================================
#define D_DEFER
#define D_NO_WATER
#include "Custom/TerrainVertex.shader.h"

[[FS_LIT_FORWARD]]
// =================================================================================================
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FORWARD_LOW]]
// =================================================================================================
#define D_LOW_QUALITY
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_READ_TEX_CACHE
#include "Custom/TerrainFragment.shader.h"

[[FS_DEPTHONLY_USE_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_READ_TEX_CACHE
#define D_DEPTHONLY
#include "Custom/TerrainFragment.shader.h"

[[FS_FEEDBACK_LIT_DEFER_CACHE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_READ_TEX_CACHE
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainFragment.shader.h"

[[FS_CACHE_COLOUR]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_CACHE_COLOUR
#include "Custom/TerrainFragment.shader.h"

[[FS_CACHE_HEIGHT]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_CACHE_COLOUR
#define D_CACHE_HEIGHT
#include "Custom/TerrainFragment.shader.h"

[[FS_CACHE_NORMAL]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_CACHE_NORMAL
#include "Custom/TerrainFragment.shader.h"

[[FS_CACHE_COLOUR_FAR]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_CACHE_COLOUR
#define D_CACHE_FAR
#include "Custom/TerrainFragment.shader.h"

[[FS_CACHE_NORMAL_FAR]]
// =================================================================================================
#define D_DEFER
#define D_WRITE_TEX_CACHE
#define D_CACHE_NORMAL
#define D_CACHE_FAR
#include "Custom/TerrainFragment.shader.h"

//TF_BEGIN
[[FS_DEPTHONLY_FORWARD]]
// =================================================================================================
#define D_DEPTHONLY
#include "Custom/TerrainFragment.shader.h"
//TF_END

[[FS_DEPTHONLY_DEFER]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_DEPTHONLY
#include "Custom/TerrainFragment.shader.h"

[[FS_DEPTHONLY_TOP]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_DEPTHONLY
#define D_NO_FADE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_X_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_X_FACING
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_Y_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_Y_FACING
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_Z_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_Z_FACING
#include "Custom/TerrainFragment.shader.h"


[[FS_LIT_DEFER_N_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_N_FACING
#include "Custom/TerrainFragment.shader.h"

// TF_BEGIN
[[FS_LIT_FRWD_TILED_N_FACING]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_N_FACING
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_STC_X_FACING]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_X_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_STC_Y_FACING]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_Y_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_STC_Z_FACING]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_Z_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_STC_N_FACING]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_N_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"


[[FS_LIT_FRWD_TILED_STC_T_SPLIT]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN_NO_FADE
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_FRWD_TILED_STC_T_SPLIT_FADE]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TILED_LIGHTS
#define D_BLOOM
#define D_DOF
#define D_OUTPUT_MOTION_VECTORS
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"
// TF_END

[[FS_LIT_DEFER_STC_X_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_X_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_Y_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_Y_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_Z_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_Z_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_N_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_N_FACING
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_N_FACING_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STL_N_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_N_FACING
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STL_N_FACING_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STH_N_FACING]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_N_FACING
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_HEIGHT_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STH_N_FACING_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_HEIGHT_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_T_SPLIT]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN_NO_FADE
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STC_T_SPLIT_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STL_T_SPLIT]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN_NO_FADE
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STL_T_SPLIT_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STH_T_SPLIT]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN_NO_FADE
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_HEIGHT_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_STH_T_SPLIT_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_TERRAIN_T_SPLIT
#define D_STOCHASTIC_TERRAIN
#define D_TERRAIN_HEIGHT_LOD
#define D_SIMPLIFIED_NOISE
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_FEEDBACK]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_FB_FADE]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_WRITE_CACHE_FEEDBACK
#define D_SWITCH_NO_BINDLESS_SAMPLERS
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_LOW]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_NO_WATER
#include "Custom/TerrainFragment.shader.h"

[[VS_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_DEFER
#define D_ASTEROID
#include "Custom/TerrainVertex.shader.h"

[[FS_LIT_FORWARD_ASTEROID]]
// =================================================================================================
//#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainFragment.shader.h"

[[FS_LIT_DEFER_ASTEROID]]
// =================================================================================================
#define D_DEFER
#define D_ATTRIBUTES
#define D_LOW_QUALITY
#define D_ASTEROID
#include "Custom/TerrainFragment.shader.h"

[[VS_REFLECT_DUALP]]
// =================================================================================================
#define D_REFLECT_DUALP
#include "Custom/TerrainVertex.shader.h"

[[VS_REFLECT_DUALP_GGX]]
// =================================================================================================
#define D_REFLECT_DUALP
#define D_USE_GGX_BRDF
#include "Custom/TerrainVertex.shader.h"

[[FS_REFLECT_DUALP]]
// =================================================================================================
#define D_REFLECT_DUALP
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[FS_REFLECT_DUALP_GGX]]
// =================================================================================================
#define D_REFLECT_DUALP
#define D_USE_GGX_BRDF
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[VS_REFLECT_WATER_STC_T_SPLIT_FADE]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TERRAIN_T_SPLIT
#define D_WATER_REFLECT
#include "Custom/TerrainVertex.shader.h"

[[FS_REFLECT_WATER_STC_T_SPLIT_FADE]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_TERRAIN_T_SPLIT
#define D_WATER_REFLECT
#define D_NO_FADE
#include "Custom/TerrainFragment.shader.h"

[[VS_REFLECT_WATER_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_WATER_REFLECT
#include "Custom/TerrainVertex.shader.h"

[[FS_REFLECT_WATER_TILED]]
// =================================================================================================
#define D_FORWARD_RENDERER
#define D_WATER_REFLECT
#define D_NO_FADE
#define D_SUBSURFACE
#include "Custom/TerrainFragment.shader.h"

[[VS_DEFER_TESS]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#include "Custom/TerrainVertex.shader.h"

[[VS_DEFER_TESS_DEPTHONLY]]
// =================================================================================================
#define D_DEFER
#define D_APPLY_DISPLACEMENT
#define D_DEPTHONLY
#include "Custom/TerrainVertex.shader.h"

[[VS_EDITS]]
// =================================================================================================
#define D_TERRAIN_EDITS
#define _F07_UNLIT
#include "Custom/TerrainVertex.shader.h"

[[FS_EDITS]]
// =================================================================================================
#define D_TERRAIN_EDITS
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[FS_EDITS_TESS]]
// =================================================================================================
#define D_TERRAIN_EDITS
//#define D_ATTRIBUTES  //?
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"

[[FS_EDITS_CACHE]]
// =================================================================================================
#define D_TERRAIN_EDITS
#define D_READ_TEX_CACHE
#define _F07_UNLIT
#include "Custom/TerrainFragment.shader.h"
